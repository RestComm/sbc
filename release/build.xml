<?xml version="1.0"?>
<project basedir="." default="release" name="sbc.release">

	<!-- general properties -->		
  <property environment="sys"/>
  <property location="../" name="workspace.sbc.dir"/>
  <property location="../target" name="release.dir"/>
  <property location="../build/dependencies" name="checkout.dir"/>
  <property location="../build/target-tomcat" name="release.tomcat.dir"/>
  <property location="../build/target-as10" name="release.as10.dir"/>
  <property location=".." name="base.dir"/>
  <property location="${release.dir}/docs" name="docs.dir"/>
  <property name="version" value="1.0.0"/>
  <property location="${release.dir}/docs/sbc" name="sbc.docs.dir"/>
  <property location="${release.tomcat.dir}/docs/sbc" name="sbc.docs.tomcat.dir"/>
  <property location="${release.as10.dir}/docs/sbc" name="sbc.docs.as10.dir"/>
 
  <property location="${workspace.sbc.dir}/configuration" name="configuration.directory"/>
  
	
  <!--os dependant binaries-->
  <condition property="wget.executable" value="C:\Users/OCA/wget\wget" else="wget">
	 <os family="windows" />
  </condition>
  
  

  <!--mobicents binaries versions-->
  <property name="sipservlets-build" value="3.2.0-89"/>
  <property name="sipservlets-as10.version" value="${sipservlets-build}"/>

  <!-- mobicents SIP Servlets 7.x on Tomcat 7 -->
  <property name="sipservlets.tomcat.distro.version" value="${sipservlets-as10.version}-apache-tomcat-7.0.64"/>
  <property name="sipservlets.tomcat.download.distro.file" value="restcomm-sip-servlets-${sipservlets.tomcat.distro.version}.zip"/>
  <property name="sipservlets.tomcat.download.url" value="https://github.com/RestComm/sip-servlets/releases/download/3.2.0-89/restcomm-sip-servlets-3.2.0-89-apache-tomcat-7.0.64.zip"/>
  <property name="sipservlets.tomcat.distro.zip.path" value="${checkout.dir}/${sipservlets.tomcat.download.distro.file}"/>

  <!-- mobicents SIP Servlets 7.x on JBoss AS7-->
  <property name="sipservlets.as10.distro.version" value="${sipservlets-as10.version}-wildfly-10.0.0.Final"/>
  <property name="sipservlets.as10.download.distro.file" value="restcomm-sip-servlets-${sipservlets.as10.distro.version}.zip"/>
	<!-- TEMPORARY -->
  <property name="sipservlets.as10.download.url" value="https://github.com/RestComm/sip-servlets/releases/download/3.2.0-89/restcomm-sip-servlets-3.2.0-89-wildfly-10.0.0.Final.zip"/>
  <!--<property name="sipservlets.as10.download.url" value="https://webukraine-my.sharepoint.com/personal/denis_zaytsev_mobius-software_com/_layouts/15/guestaccess.aspx?docid=06c327c14d89c47cba37a391bead1d666&amp;authkey=AQZXBap2bYM1oLBLRnwjfD0"/>-->
  <property name="sipservlets.as10.distro.zip.path" value="${checkout.dir}/${sipservlets.as10.download.distro.file}"/>

  <property location="${release.tomcat.dir}/restcomm-sip-servlets-${sipservlets.tomcat.distro.version}" name="build.work.dir"/>
  <property location="${release.as10.dir}/restcomm-sip-servlets-${sipservlets.as10.distro.version}" name="build.as10work.dir"/>
	 
  <property name="release.build.goals" value="clean install -Dmaven.test.skip=true"/>
  <property name="release.build.goals2" value="install -Dmaven.test.skip=true"/>
  <property name="release.build.test.goals" value="clean install -Dmaven.test.failure.ignore=true"/>
  <property name="release.ts.deploy.goals" value="clean deploy"/>

  <condition else="mvn" property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat">
    <os family="windows"/>
  </condition>

  <taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="${ant.file.sbc.release}/../ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>

  <target depends="clean,get-deps,extract-deps,build-sbc, copy-sbc, copy-docs, make-final-zip" name="release"/>
  <target depends="get-deps,extract-deps,build-sbc, copy-sbc, copy-docs, make-final-zip" name="release-no-clean"/>

  <target name="deploy">
    <ant antfile="${ant.file.sbc.release}" target="release">
      <property name="release.build.goals" value="${release.ts.deploy.goals}"/>
    </ant>
  </target>

  <target name="deploy-no-clean">
    <ant antfile="${ant.file.sbc.release}" target="release-no-clean">
      <property name="release.build.goals" value="${release.ts.deploy.goals}"/>
    </ant>
  </target>

  <target name="release-test">
    <ant antfile="${ant.file.sbc.release}" target="release">
      <property name="release.build.goals" value="${release.build.test.goals}"/>
    </ant>
  </target>

  <target name="release-test-no-clean">
    <ant antfile="${ant.file.sbc.release}" target="release-no-clean">
      <property name="release.build.goals" value="${release.build.test.goals}"/>
    </ant>
  </target>

  <!--GET Sip=Servlets  - downloads-->
   
  <target depends="get-sipservlets-tomcat,get-sipservlets-as10" name="get-deps"/>
  <target depends="extract-sipservlets-tomcat,extract-sipservlets-as10" name="extract-deps"/>
  
  <!--
  <target depends="get-sipservlets-tomcat" name="get-deps"/>
  <target depends="extract-sipservlets-tomcat" name="extract-deps"/>
-->
  <!--SipServlets Tomcat-->
  <available file="${sipservlets.tomcat.distro.zip.path}" property="got.sipservlets-tomcat"/>
  <target name="get-sipservlets-tomcat" unless="got.sipservlets-tomcat">
    <echo>Downloading SipServlets Tomcat version: ${sipservlets-as10.version} from ${sipservlets.tomcat.download.url}</echo>
    <exec executable="${wget.executable}" failonerror="true">
    <arg value="--no-check-certificate"/> 
      <arg value="${sipservlets.tomcat.download.url}"/>
    </exec>
    <move file="${base.dir}/release/${sipservlets.tomcat.download.distro.file}" todir="${checkout.dir}"/>
  </target>

  <!--SipServlets Wildfly 10 -->
  
  <available file="${sipservlets.as10.distro.zip.path}" property="got.sipservlets-as10"/>
  <target name="get-sipservlets-as10" unless="got.sipservlets-as10">
    <echo>Downloading SipServlets Wildfly version: ${sipservlets-as10.version}</echo>
    <exec executable="${wget.executable}" failonerror="true">
      <arg value="--no-check-certificate"/>
      <arg value="${sipservlets.as10.download.url}"/>
	<arg value="-O"/>
	<arg value="${sipservlets.as10.download.distro.file}"/>
    </exec>
    <move file="${base.dir}/release/${sipservlets.as10.download.distro.file}" todir="${checkout.dir}"/>
  </target>

  <target depends="get-sipservlets-tomcat" name="extract-sipservlets-tomcat">
    <delete dir="${checkout.sipservlets-tomcat.dir}" failonerror="false"/>
    <unzip dest="${release.tomcat.dir}" src="${sipservlets.tomcat.distro.zip.path}">
      <mapper from="mss-${sipservlets-as10.version}-apache-tomcat-7.0.50/*" to="*" type="glob"/>
    </unzip>
  </target>

  <target depends="get-sipservlets-as10" name="extract-sipservlets-as10">
    <delete dir="${checkout.sipservlets-as10.dir}" failonerror="false"/>
    <unzip dest="${release.as10.dir}" src="${sipservlets.as10.distro.zip.path}">
      <mapper from="mss-${sipservlets-as10.version}wildfly-10.0.0.Final/*" to="*" type="glob"/>
    </unzip>

	<!-- TEMPORARY -->
	<move todir="${build.as10work.dir}">
		<!--<fileset dir="${release.as10.dir}/TelScale-SIP-Servlets-8.0.0.24-wildfly-10.0.0.Final"/>-->
		<fileset dir="${release.as10.dir}/restcomm-sip-servlets-${sipservlets-as10.version}-wildfly-10.0.0.Final"/>
	</move>
  </target>

  <target name="build-sbc">
    <echo>Building SBC</echo>
    <echo>SBC workspace dir: "${workspace.sbc.dir}"</echo>
    <exec dir="${workspace.sbc.dir}" executable="${mvn.executable}" failonerror="true">
      <arg line="${release.build.goals} -Pmaven-release"/>
    </exec>
	<exec dir="${workspace.sbc.dir}" executable="${mvn.executable}" failonerror="true">
      <arg line="${release.build.goals2} -Pmaven-wildfly-release"/>
    </exec>
    <!-- 
    <exec dir="${workspace.sbc.dir}/docs" executable="${mvn.executable}" failonerror="true">
      <arg line="${release.build.goals} -Pmobicents"/>
    </exec>
    -->
    <exec dir="${workspace.sbc.dir}/application" executable="${mvn.executable}" failonerror="true">
      <arg line="javadoc:javadoc"/>
    </exec>
  </target>

  <target name="copy-sbc">
    <echo>Copy sbc
    </echo>
    <!--tomcat-->
  	<delete includeemptydirs="true">
  	  	    <fileset dir="${build.work.dir}/webapps/" includes="**/*"/>
  	</delete>
  	
  	<copy failonerror="true" todir="${build.work.dir}/webapps/restcomm-sbc">
  	      <fileset dir="${workspace.sbc.dir}/application/target/restcomm-sbc">
  	        <include name="**/*"/>
  	      </fileset>
  	</copy>

    <copy failonerror="true" file="${configuration.directory}/catalina.sh" overwrite="true" tofile="${build.work.dir}/bin/catalina.sh"/>
  	<copy failonerror="true" file="${configuration.directory}/sbc-configuration.sh" overwrite="true" tofile="${build.work.dir}/bin/sbc-configuration.sh"/>
    <copy failonerror="true" file="${configuration.directory}/setenv.sh" overwrite="true" tofile="${build.work.dir}/bin/setenv.sh"/>
  	<copy failonerror="true" file="${configuration.directory}/certs.sh" overwrite="true" tofile="${build.work.dir}/bin/certs.sh"/>
  	<copy failonerror="true" file="${configuration.directory}/sbc.sh" overwrite="true" tofile="${build.work.dir}/bin/sbc.sh"/>
    <copy failonerror="true" file="${configuration.directory}/server.xml" overwrite="true" tofile="${build.work.dir}/conf/server.xml"/>
  	<copy failonerror="true" file="${configuration.directory}/mss-sip-stack.properties.template" overwrite="true" tofile="${build.work.dir}/conf/mss-sip-stack.properties.template"/>
  	<copy failonerror="true" file="${configuration.directory}/sbc.xml.template" overwrite="true" tofile="${build.work.dir}/conf/sbc.xml.template"/>
  	<copy failonerror="true" file="${configuration.directory}/sbc.script" overwrite="true" tofile="${build.work.dir}/webapps/restcomm-sbc/WEB-INF/data/hsql/sbc.script"/>
    <delete failonerror="false" file="${build.work.dir}/conf/dars/mobicents-dar.properties"/>
  	
  	<delete includeemptydirs="true">
  	  	    <fileset dir="${build.work.dir}/docs/" includes="**/*"/>
  	</delete>
  	
    <copy failonerror="true" file="${configuration.directory}/mobicents-dar.properties" tofile="${build.work.dir}/conf/dars/mobicents-dar.properties"/>
    
    

  	 <copy failonerror="true" todir="${build.work.dir}/docs">
  	      <fileset dir="${workspace.sbc.dir}/docs/target/generated-docs">
  	        <include name="**/*"/>
  	      </fileset>
  	</copy>
    
    <touch file="${build.work.dir}/bin/setenv.sh"/>

    <chmod dir="${build.work.dir}/bin" includes="**/*.sh" perm="ugo+rx"/>
  	<chmod dir="${build.work.dir}/webapps/restcomm-sbc/WEB-INF/scripts" includes="**/*.sh" perm="ugo+rx"/>


    <!--JBoss AS10-->
    
    <delete failonerror="false" file="${build.as10work.dir}/standalone/configuration/dars/mobicents-dar.properties"/>
 
    <copy failonerror="true" file="${configuration.directory}/mobicents-dar.properties" tofile="${build.as10work.dir}/standalone/configuration/dars/mobicents-dar.properties"/>
    <copy failonerror="true" file="${configuration.directory}/mss-sip-stack.properties" overwrite="true" tofile="${build.as10work.dir}/standalone/configuration/mss-sip-stack.properties"/>
    
    <!--
	<copy failonerror="true" todir="${build.as10work.dir}/standalone/deployments/restcomm-sbc.war">
      <fileset dir="${workspace.sbc.dir}/application/target/restcomm-sbc">
        <include name="**/*"/>
      </fileset>
    </copy>
	-->
    <!-- <touch file="${build.as7work.dir}/standalone/deployments/restcomm-sbc.war.dodeploy"/> -->
	<copy failonerror="true" file="${workspace.sbc.dir}/application/target/restcomm-sbc-wildfly.war" overwrite="true" tofile="${build.as10work.dir}/standalone/deployments/restcomm-sbc-wildfly.war"/>
	<delete failonerror="false" file="${build.as10work.dir}/standalone/deployments/media-jsr309-servlet.war"/>
    <echo append="true" file="${build.as10work.dir}/bin/standalone.conf">
      export APPSERVER_PLATFORM='TELESTAX' 
    </echo>
	
 <!--
    <copy failonerror="true" toDir="${build.as7work.dir}/bin/restcomm-sbc">
      <fileset dir="${configuration.directory}/config-scripts/as7-config-scripts/restcomm-sbc">
        <include name="**/*"/>
      </fileset>
    </copy>
-->
    <chmod dir="${build.as10work.dir}/bin" includes="**/*.sh" perm="ugo+rx"/>
	
  </target>

  <target name="copy-docs">
    <!--docs-->
    <mkdir dir="${sbc.docs.dir}"/>
    <copy failonerror="true" file="${workspace.sbc.dir}/README.md" todir="${sbc.docs.dir}">
    
    </copy>
    <mkdir dir="${sbc.docs.dir}/sbc-javadocs"/>
    <copy failonerror="true" todir="${sbc.docs.dir}/sbc-javadocs">
      <fileset dir="${workspace.sbc.dir}/application/target/site/apidocs">
        <include name="**/*"/>
      </fileset>
    </copy>
    <!--docs tomcat-->
    <mkdir dir="${sbc.docs.tomcat.dir}"/>
    <copy failonerror="true" file="${workspace.sbc.dir}/README.md" todir="${sbc.docs.tomcat.dir}">
     
    </copy>
    <mkdir dir="${sbc.docs.tomcat.dir}/sbc-javadocs"/>
    <copy failonerror="true" todir="${sbc.docs.tomcat.dir}/sbc-javadocs">
      <fileset dir="${workspace.sbc.dir}/application/target/site/apidocs">
        <include name="**/*"/>
      </fileset>
    </copy>
    <!--docs JBoss AS10-->
    
    <mkdir dir="${sbc.docs.as10.dir}"/>
    <copy failonerror="true" file="${workspace.sbc.dir}/README.md" todir="${sbc.docs.as10.dir}">
     
    </copy>
    <mkdir dir="${sbc.docs.as10.dir}/sbc-javadocs"/>
    <copy failonerror="true" todir="${sbc.docs.as10.dir}/sbc-javadocs">
      <fileset dir="${workspace.sbc.dir}/application/target/site/apidocs">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <target depends="set-time-stamp" name="make-final-zip">
  <!-- 
    <fixcrlf eof="remove" eol="lf" includes="*.sh" srcdir="${release.as7.dir}/bin"/>
  -->
    <fixcrlf eof="remove" eol="lf" includes="*.sh" srcdir="${build.work.dir}/bin"/>

    <zip destfile="${base.dir}/SBC-JBoss-AS10-${sbc.release.version}.zip" filesonly="false">
      <zipfileset dir="${build.as10work.dir}/bin" filemode="755" prefix="SBC-JBoss-AS10-${sbc.release.version}/bin">
        <include name="*.sh"/>
        <include name="**/*.sh"/>
      </zipfileset>
      <zipfileset dir="${build.as10work.dir}/bin" prefix="SBC-JBoss-AS10-${sbc.release.version}/bin">
        <exclude name="*.sh"/>
        <exclude name="**/*.sh"/>
      </zipfileset>
  
      <zipfileset dir="${build.as10work.dir}" excludes="**/bin/** **/server/*/log/** **/server/*/tmp/** **/server/*/work/** **/server/tmp/**" prefix="SBC-JBoss-AS10-${sbc.release.version}"/>
    </zip>
 
    <zip destfile="${base.dir}/SBC-Tomcat7-${sbc.release.version}.zip" filesonly="false" >
      <zipfileset dir="${build.work.dir}"  prefix="SBC-Tomcat7-${sbc.release.version}"/>
      <zipfileset dir="${build.work.dir}/bin" filemode="755" prefix="SBC-Tomcat7-${sbc.release.version}/bin">
    	 <include name="*.sh"/>
      </zipfileset>
    <!--
      
      <zipfileset dir="${release.tomcat.dir}/bin" prefix="SBC-Tomcat7-${sbc.release.version}/bin">
        <exclude name="*.sh"/>
      </zipfileset>
    -->
    </zip>
  </target>

  <target name="set-time-stamp" unless="skip.timestamp">
    <tstamp>
      <format pattern="yyMMddHHmm" property="time.stamp"/>
    </tstamp>
  </target>


	
  <target name="clean">
    <delete dir="${release.tomcat.dir}"/>
    <delete dir="${release.as10.dir}"/>
    <delete file="restcomm-sip-servlets-version.txt"/>
  </target>
</project>
