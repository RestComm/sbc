<?xml version="1.0"?>
<project basedir="." default="release" name="sbc.release">
<!-- certificate properties -->	
<property name="build.output.dir" value="/usr/local"/>
<property name="verisign.key.store" value="${build.output.dir}/.keystore"/>
<property name="verisign.key.storepass" value="chanGeME"/>
<property name="verisign.key.alias" value="sbc"/>
<property name="verisign.key.pass" value="chanGeME"/>
	<!-- general properties -->		
  <property environment="sys"/>
  <property location="../" name="workspace.sbc.dir"/>
  <property location="../target" name="release.dir"/>
  <property location="../build/dependencies" name="checkout.dir"/>
  <property location="../build/target-tomcat" name="release.tomcat.dir"/>
  <property location="../build/target-as7" name="release.as7.dir"/>
  <property location=".." name="base.dir"/>
  <property location="${release.dir}/docs" name="docs.dir"/>
  <property name="version" value="1.0.0"/>
  <property location="${release.dir}/docs/sbc" name="sbc.docs.dir"/>
  <property location="${release.tomcat.dir}/docs/sbc" name="sbc.docs.tomcat.dir"/>
  <property location="${release.as7.dir}/docs/sbc" name="sbc.docs.as7.dir"/>
 
  <property location="${workspace.sbc.dir}/configuration" name="configuration.directory"/>
  
	
  <!--os dependant binaries-->
  <condition property="wget.executable" value="C:\Program Files (x86)\GnuWin32\bin\wget" else="wget">
	 <os family="windows" />
  </condition>

  <!--mobicents binaries versions-->
  <property name="sipservlets-build" value="695"/>
  <property name="sipservlets-as7.version" value="3.1.${sipservlets-build}"/>

  <!-- mobicents SIP Servlets 7.x on Tomcat 7 -->
  <property name="sipservlets.tomcat.distro.version" value="${sipservlets-as7.version}-apache-tomcat-7.0.64"/>
  <property name="sipservlets.tomcat.download.distro.file" value="restcomm-sip-servlets-${sipservlets.tomcat.distro.version}.zip"/>
  <property name="sipservlets.tomcat.download.url" value="https://mobicents.ci.cloudbees.com/job/RestcommSipServlets-Release/${sipservlets-build}/artifact/${sipservlets.tomcat.download.distro.file}"/>
  <property name="sipservlets.tomcat.distro.zip.path" value="${checkout.dir}/${sipservlets.tomcat.download.distro.file}"/>

  <!-- mobicents SIP Servlets 7.x on JBoss AS7-->
  <property name="sipservlets.as7.distro.version" value="${sipservlets-as7.version}-jboss-as-7.2.0.Final"/>
  <property name="sipservlets.as7.download.distro.file" value="restcomm-sip-servlets-${sipservlets.as7.distro.version}.zip"/>
  <property name="sipservlets.as7.download.url" value="https://mobicents.ci.cloudbees.com/job/RestcommSipServlets-Release/${sipservlets-build}/artifact/${sipservlets.as7.download.distro.file}"/>
  <property name="sipservlets.as7.distro.zip.path" value="${checkout.dir}/${sipservlets.as7.download.distro.file}"/>

  <property location="${release.tomcat.dir}/restcomm-sip-servlets-${sipservlets.tomcat.distro.version}" name="build.work.dir"/>
	 
  <property name="release.build.goals" value="clean install -Dmaven.test.skip=true"/>
  <property name="release.build.test.goals" value="clean install -Dmaven.test.failure.ignore=true"/>
  <property name="release.ts.deploy.goals" value="clean deploy"/>

  <condition else="mvn" property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat">
    <os family="windows"/>
  </condition>

  <taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="${ant.file.sbc.release}/../ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>

  <target depends="clean,get-deps,extract-deps,build-sbc, copy-sbc, copy-docs, genKeystore, make-final-zip" name="release"/>
  <target depends="get-deps,extract-deps,build-sbc, copy-sbc, copy-docs, genKeystore, make-final-zip" name="release-no-clean"/>

  <target name="deploy">
    <ant antfile="${ant.file.sbc.release}" target="release">
      <property name="release.build.goals" value="${release.ts.deploy.goals}"/>
    </ant>
  </target>

  <target name="deploy-no-clean">
    <ant antfile="${ant.file.sbc.release}" target="release-no-clean">
      <property name="release.build.goals" value="${release.ts.deploy.goals}"/>
    </ant>
  </target>

  <target name="release-test">
    <ant antfile="${ant.file.sbc.release}" target="release">
      <property name="release.build.goals" value="${release.build.test.goals}"/>
    </ant>
  </target>

  <target name="release-test-no-clean">
    <ant antfile="${ant.file.sbc.release}" target="release-no-clean">
      <property name="release.build.goals" value="${release.build.test.goals}"/>
    </ant>
  </target>

  <!--GET Sip=Servlets  - downloads-->
  <!-- 
  <target depends="get-sipservlets-tomcat,get-sipservlets-as7" name="get-deps"/>
  <target depends="extract-sipservlets-tomcat,extract-sipservlets-as7" name="extract-deps"/>
  -->
  <target depends="get-sipservlets-tomcat" name="get-deps"/>
  <target depends="extract-sipservlets-tomcat" name="extract-deps"/>

  <!--SipServlets Tomcat-->
  <available file="${sipservlets.tomcat.distro.zip.path}" property="got.sipservlets-tomcat"/>
  <target name="get-sipservlets-tomcat" unless="got.sipservlets-tomcat">
    <echo>Downloading SipServlets Tomcat version: ${sipservlets-as7.version}</echo>
    <exec executable="${wget.executable}" failonerror="true">
      <arg value="--no-check-certificate"/>
      <arg value="${sipservlets.tomcat.download.url}"/>
    </exec>
    <move file="${base.dir}/release/${sipservlets.tomcat.download.distro.file}" todir="${checkout.dir}"/>
  </target>

  <!--SipServlets JBoss AS7 -->
  
  <available file="${sipservlets.as7.distro.zip.path}" property="got.sipservlets-as7"/>
  <target name="get-sipservlets-as7" unless="got.sipservlets-as7">
    <echo>Downloading SipServlets JBoss AS7 version: ${sipservlets-as7.version}</echo>
    <exec executable="${wget.executable}" failonerror="true">
      <arg value="--no-check-certificate"/>
      <arg value="${sipservlets.as7.download.url}"/>
    </exec>
    <move file="${base.dir}/build/${sipservlets.as7.download.distro.file}" todir="${checkout.dir}"/>
  </target>

  <target depends="get-sipservlets-tomcat" name="extract-sipservlets-tomcat">
    <delete dir="${checkout.sipservlets-tomcat.dir}" failonerror="false"/>
    <unzip dest="${release.tomcat.dir}" src="${sipservlets.tomcat.distro.zip.path}">
      <mapper from="mss-${sipservlets-as7.version}-apache-tomcat-7.0.50/*" to="*" type="glob"/>
    </unzip>
  </target>

  <target depends="get-sipservlets-as7" name="extract-sipservlets-as7">
    <delete dir="${checkout.sipservlets-as7.dir}" failonerror="false"/>
    <unzip dest="${release.as7.dir}" src="${sipservlets.as7.distro.zip.path}">
      <mapper from="mss-${sipservlets-as7.version}-jboss-as-7.2.0.Final/*" to="*" type="glob"/>
    </unzip>
  </target>

  <target name="build-sbc">
    <echo>Building SBC</echo>
    <echo>SBC workspace dir: "${workspace.sbc.dir}"</echo>
    <exec dir="${workspace.sbc.dir}" executable="${mvn.executable}" failonerror="true">
      <arg line="${release.build.goals}"/>
    </exec>
    <!-- 
    <exec dir="${workspace.sbc.dir}/docs" executable="${mvn.executable}" failonerror="true">
      <arg line="${release.build.goals} -Pmobicents"/>
    </exec>
    -->
    <exec dir="${workspace.sbc.dir}/application" executable="${mvn.executable}" failonerror="true">
      <arg line="javadoc:javadoc"/>
    </exec>
  </target>

  <target name="copy-sbc">
    <echo>Copy sbc
    </echo>
    <!--tomcat-->
    <copy failonerror="true" file="${configuration.directory}/catalina.sh" overwrite="true" tofile="${build.work.dir}/bin/catalina.sh"/>
    <copy failonerror="true" file="${configuration.directory}/setenv.sh" overwrite="true" tofile="${build.work.dir}/bin/setenv.sh"/>
    <copy failonerror="true" file="${configuration.directory}/server.xml" overwrite="true" tofile="${build.work.dir}/conf/server.xml"/>
    <delete failonerror="false" file="${build.work.dir}/conf/dars/mobicents-dar.properties"/>
  	<delete includeemptydirs="true">
  	    <fileset dir="${build.work.dir}/webapps/" includes="**/*"/>
  	</delete>
  	<delete includeemptydirs="true">
  	  	    <fileset dir="${build.work.dir}/docs/" includes="**/*"/>
  	</delete>
  	
    <copy failonerror="true" file="${configuration.directory}/mobicents-dar.properties" tofile="${build.work.dir}/conf/dars/mobicents-dar.properties"/>
    <copy failonerror="true" file="${configuration.directory}/mss-sip-stack.properties" overwrite="true" tofile="${build.work.dir}/conf/mss-sip-stack.properties"/>
    
    <copy failonerror="true" todir="${build.work.dir}/webapps/restcomm-sbc">
      <fileset dir="${workspace.sbc.dir}/application/target/restcomm-sbc">
        <include name="**/*"/>
      </fileset>
    </copy>

  	 <copy failonerror="true" todir="${build.work.dir}/docs">
  	      <fileset dir="${workspace.sbc.dir}/docs/target/generated-docs">
  	        <include name="**/*"/>
  	      </fileset>
  	</copy>
    
    <touch file="${build.work.dir}/bin/setenv.sh"/>

    <echo append="true" file="${build.work.dir}/bin/setenv.sh">
      export APPSERVER_PLATFORM='SBC' 
    </echo>

    <chmod dir="${build.work.dir}/bin" includes="**/*.sh" perm="ugo+rx"/>


    <!--JBoss AS7-->
    <!-- 
    <delete failonerror="false" file="${release.as7.dir}/standalone/configuration/dars/mobicents-dar.properties"/>
 
    <copy failonerror="true" file="${configuration.directory}/mobicents-dar.properties" tofile="${release.as7.dir}/standalone/configuration/dars/mobicents-dar.properties"/>
    <copy failonerror="true" file="${configuration.directory}/mss-sip-stack.properties" overwrite="true" tofile="${release.as7.dir}/standalone/configuration/mss-sip-stack.properties"/>
    
    <copy failonerror="true" todir="${release.as7.dir}/standalone/deployments/restcomm-sbc.war">
      <fileset dir="${workspace.sbc.dir}/application/target/restcomm-sbc">
        <include name="**/*"/>
      </fileset>
    </copy>
    <touch file="${release.as7.dir}/standalone/deployments/restcomm-sbc.war.dodeploy"/>

   
    <echo append="true" file="${release.as7.dir}/bin/standalone.conf">
      export APPSERVER_PLATFORM='TELESTAX' 
    </echo>
	
 
    <copy failonerror="true" toDir="${release.as7.dir}/bin/restcomm-sbc">
      <fileset dir="${configuration.directory}/config-scripts/as7-config-scripts/restcomm-sbc">
        <include name="**/*"/>
      </fileset>
    </copy>

    <chmod dir="${release.as7.dir}/bin" includes="**/*.sh" perm="ugo+rx"/>
	-->
  </target>

  <target name="copy-docs">
    <!--docs-->
    <mkdir dir="${sbc.docs.dir}"/>
    <copy failonerror="true" file="${workspace.sbc.dir}/README.md" todir="${sbc.docs.dir}">
    
    </copy>
    <mkdir dir="${sbc.docs.dir}/sbc-javadocs"/>
    <copy failonerror="true" todir="${sbc.docs.dir}/sbc-javadocs">
      <fileset dir="${workspace.sbc.dir}/application/target/site/apidocs">
        <include name="**/*"/>
      </fileset>
    </copy>
    <!--docs tomcat-->
    <mkdir dir="${sbc.docs.tomcat.dir}"/>
    <copy failonerror="true" file="${workspace.sbc.dir}/README.md" todir="${sbc.docs.tomcat.dir}">
     
    </copy>
    <mkdir dir="${sbc.docs.tomcat.dir}/sbc-javadocs"/>
    <copy failonerror="true" todir="${sbc.docs.tomcat.dir}/sbc-javadocs">
      <fileset dir="${workspace.sbc.dir}/application/target/site/apidocs">
        <include name="**/*"/>
      </fileset>
    </copy>
    <!--docs JBoss AS7-->
    <!-- 
    <mkdir dir="${sbc.docs.as7.dir}"/>
    <copy failonerror="true" file="${workspace.sbc.dir}/README.md" todir="${sbc.docs.as7.dir}">
     
    </copy>
    <mkdir dir="${sbc.docs.as7.dir}/sbc-javadocs"/>
    <copy failonerror="true" todir="${sbc.docs.as7.dir}/sbc-javadocs">
      <fileset dir="${workspace.sbc.dir}/application/target/site/apidocs">
        <include name="**/*"/>
      </fileset>
    </copy>
    -->
  </target>

  <target depends="set-time-stamp" name="make-final-zip">
  <!-- 
    <fixcrlf eof="remove" eol="lf" includes="*.sh" srcdir="${release.as7.dir}/bin"/>
  -->
    <fixcrlf eof="remove" eol="lf" includes="*.sh" srcdir="${build.work.dir}/bin"/>
<!-- 
    <zip destfile="${base.dir}/SBC-JBoss-AS7-${sbc.release.version}.zip" filesonly="false">
      <zipfileset dir="${release.as7.dir}/bin" filemode="755" prefix="SBC-JBoss-AS7-${sbc.release.version}/bin">
        <include name="*.sh"/>
        <include name="**/*.sh"/>
      </zipfileset>
      <zipfileset dir="${release.as7.dir}/bin" prefix="SBC-JBoss-AS7-${sbc.release.version}/bin">
        <exclude name="*.sh"/>
        <exclude name="**/*.sh"/>
      </zipfileset>
  
      <zipfileset dir="${release.as7.dir}" excludes="**/bin/** **/server/*/log/** **/server/*/tmp/** **/server/*/work/** **/server/tmp/**" prefix="SBC-JBoss-AS7-${sbc.release.version}"/>
    </zip>
  -->  
    <zip destfile="${base.dir}/SBC-Tomcat7-${sbc.release.version}.zip" filesonly="false" >
      <zipfileset dir="${build.work.dir}"  prefix="SBC-Tomcat7-${sbc.release.version}"/>
      <zipfileset dir="${build.work.dir}/bin" filemode="755" prefix="SBC-Tomcat7-${sbc.release.version}/bin">
    	 <include name="*.sh"/>
      </zipfileset>
    <!--
      
      <zipfileset dir="${release.tomcat.dir}/bin" prefix="SBC-Tomcat7-${sbc.release.version}/bin">
        <exclude name="*.sh"/>
      </zipfileset>
    -->
    </zip>
  </target>

  <target name="set-time-stamp" unless="skip.timestamp">
    <tstamp>
      <format pattern="yyMMddHHmm" property="time.stamp"/>
    </tstamp>
  </target>

	<target name="genKeystore">
	  <mkdir dir="${build.output.dir}" />
	  <delete failonerror="false" file="${verisign.key.store}"/>	 
	  <genkey alias="${verisign.key.alias}" verbose="true"
	storepass="${verisign.key.storepass}" keypass="${verisign.key.pass}"
	validity="365" keyalg="RSA" keysize="2048" keystore="${verisign.key.store}">
	    <dname>
	      <param name="CN" value="SBC Project"/>
	      <param name="OU" value="Osky"/>
	      <param name="O" value="sbc.eolos.la"/>
	      <param name="C" value="US"/>
	    </dname>
	  </genkey>
	  </target>
	
  <target name="clean">
    <delete dir="${release.tomcat.dir}"/>
   <!-- 
    <delete dir="${release.as7.dir}"/>
    -->
  </target>
</project>