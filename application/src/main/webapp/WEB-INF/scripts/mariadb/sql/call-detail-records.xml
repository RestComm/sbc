<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
  @author thomas.quintana@telestax.com (Thomas Quintana)
-->
<mapper namespace="org.restcomm.sbc.dao.CallDetailRecordsDao">
  <insert id="addCallDetailRecord" parameterType="map">
    INSERT INTO restcomm_call_detail_records (sid, instanceid, parent_call_sid, date_created, date_updated, account_sid, recipient, sender, phone_number_sid, status,
    start_time, end_time, duration, price, direction, answered_by, api_version, forwarded_from, caller_name, uri, call_path, ring_duration, conference_sid, muted, start_conference_on_enter, end_conference_on_exit, on_hold) VALUES (#{sid}, #{instanceid}, #{parent_call_sid}, 
		#{date_created}, #{date_updated}, #{account_sid}, #{to}, #{from}, #{phone_number_sid}, #{status}, #{start_time}, #{end_time}, #{duration}, #{price},
		#{direction},	#{answered_by}, #{api_version}, #{forwarded_from}, #{caller_name}, #{uri}, #{call_path}, #{ring_duration}, #{conference_sid}, #{muted}, #{start_conference_on_enter}, #{end_conference_on_exit}, #{on_hold});
  </insert>
  
  <select id="getCallDetailRecord" parameterType="string" resultType="hashmap">
    SELECT * FROM restcomm_call_detail_records WHERE sid=#{sid};
  </select>
  
  
  	<!-- Issue 153: https://bitbucket.org/telestax/telscale-restcomm/issue/153 -->
	<!-- Issue 153: https://bitbucket.org/telestax/telscale-restcomm/issue/110 -->
	<select id="getTotalCallDetailRecordByUsingFilters" parameterType="org.restcomm.sbc.bo.CallDetailRecordFilter" resultType="int">
		SELECT COUNT(*) FROM restcomm_call_detail_records WHERE account_sid=#{accountSid}

		<if test="instanceid != null">
			AND instanceid like #{instanceid}
		</if>
		<if test="recipient != null">
			AND recipient like #{recipient}
		</if>
		<if test="sender != null">
			AND sender like #{sender}
		</if>
		<if test="status != null">
			AND status like #{status}
		</if>
		<if test="parentCallSid != null">
			AND parent_call_sid like #{parentCallSid}
		</if>
		<if test="conferenceSid != null">
			AND conference_sid like #{conferenceSid}
		</if>
		<!-- select * from "restcomm_call_detail_records" where "start_time" >= '2013-08-23' order by "start_time" ; -->
		<if test="startTime != null">
		    AND start_time &gt;= #{startTime}
		</if>
		<if test="endTime != null">
			AND end_time &lt;= DATE_ADD(#{endTime},INTERVAL 1 DAY)
		</if>
	</select>
  
	<!-- Issue 153: https://bitbucket.org/telestax/telscale-restcomm/issue/153 -->
	<!-- Issue 153: https://bitbucket.org/telestax/telscale-restcomm/issue/110 -->
	<select id="getCallDetailRecordByUsingFilters" parameterType="org.restcomm.sbc.bo.CallDetailRecordFilter" resultType="hashmap">
		SELECT * FROM restcomm_call_detail_records AS restcomm_call_detail_records WHERE account_sid=#{accountSid}

		<if test="instanceid != null">
			AND instanceid like #{instanceid}
		</if>
		<if test="recipient != null">
			AND recipient like #{recipient}
		</if>
		<if test="sender != null">
			AND sender like #{sender}
		</if>
		<if test="status != null">
			AND status like #{status}
		</if>
		<if test="parentCallSid != null">
			AND parent_call_sid like #{parentCallSid}
		</if>
		<if test="conferenceSid != null">
			AND conference_sid like #{conferenceSid}
		</if>
		<!-- select * from "restcomm_call_detail_records" where "start_time" >= '2013-08-23' order by "start_time" ; -->
		<if test="startTime != null">
		    AND start_time &gt;= #{startTime}
		</if>

		<if test="endTime != null">
			AND end_time &lt;= DATE_ADD(#{endTime},INTERVAL 1 DAY) order by start_time
		</if>
		
		LIMIT #{limit} OFFSET #{offset}
	</select>  
  
  
  <select id="getCallDetailRecords" parameterType="string" resultType="hashmap">
    SELECT * FROM restcomm_call_detail_records WHERE account_sid=#{account_sid};
  </select>
  
  <select id="getCallDetailRecordsByRecipient" parameterType="string" resultType="hashmap">
    SELECT * FROM restcomm_call_detail_records WHERE recipient=#{to};
  </select>
  
  <select id="getCallDetailRecordsBySender" parameterType="string" resultType="hashmap">
    SELECT * FROM restcomm_call_detail_records WHERE sender=#{from};
  </select>
  
  <select id="getCallDetailRecordsByStatus" parameterType="string" resultType="hashmap">
    SELECT * FROM restcomm_call_detail_records WHERE status=#{status};
  </select>
  
  <select id="getCallDetailRecordsByStartTime" parameterType="date" resultType="hashmap">
    SELECT * FROM restcomm_call_detail_records WHERE start_time&gt;=#{start_time} AND start_time&lt;DATE_ADD(#{start_time},INTERVAL 1 DAY);
  </select>

	<select id="getCallDetailRecordsByEndTime" parameterType="date" resultType="hashmap">
		SELECT * FROM restcomm_call_detail_records WHERE end_time&gt;=#{end_time} AND end_time&lt;DATE_ADD(#{end_time},INTERVAL 1 DAY);
	</select>
  
  <select id="getCallDetailRecordsByParentCall" parameterType="string" resultType="hashmap">
    SELECT * FROM restcomm_call_detail_records WHERE parent_call_sid=#{parent_call_sid};
  </select>

  <select id="getCallDetailRecordsByConferenceSid" parameterType="string" resultType="hashmap">
    SELECT * FROM restcomm_call_detail_records WHERE conference_sid=#{conference_sid};
  </select>

	<select id="getCallDetailRecordsByInstanceId" parameterType="string" resultType="hashmap">
		SELECT * FROM restcomm_call_detail_records WHERE instanceid=#{instanceid};
	</select>

  <delete id="removeCallDetailRecord" parameterType="string">
    DELETE FROM restcomm_call_detail_records WHERE sid=#{sid};
  </delete>
  
  <delete id="removeCallDetailRecords" parameterType="string">
    DELETE FROM restcomm_call_detail_records WHERE account_sid=#{account_sid};
  </delete>
  
  <update id="updateCallDetailRecord" parameterType="map">
    UPDATE restcomm_call_detail_records SET date_updated=#{date_updated}, status=#{status}, start_time=#{start_time}, end_time=#{end_time}, duration=#{duration},
    price=#{price}, answered_by=#{answered_by}, ring_duration=#{ring_duration}, conference_sid=#{conference_sid}, muted=#{muted}, start_conference_on_enter=#{start_conference_on_enter}, end_conference_on_exit=#{end_conference_on_exit}, on_hold=#{on_hold} WHERE sid=#{sid};
  </update>
</mapper>
